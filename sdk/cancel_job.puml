@startuml

title Communication example of cancelling a job between SDK and orchestrator
participant SDK as sdk
participant orchestrator as orchestrator

box rabbitmq #white
    queue job_submissions.TYPE          as job_submissions
    queue jobs.ID.result                as job_result
    queue jobs.ID.progress              as job_progress
    queue jobs.ID.status                as job_status
    queue jobs.ID.cancel                as job_cancel
end box


autonumber 1.1
sdk -> job_submissions : JobSubmission
job_submissions -> orchestrator : JobSubmission


group Update SDK about progress
    autonumber inc A
    orchestrator -> job_status : JobStatusUpdate (registered)
    job_status -> sdk : JobStatusUpdate (registered)
    autonumber inc A
    orchestrator -> job_status : JobStatusUpdate (enqueued)
    job_status -> sdk : JobStatusUpdate (enqueued)
    autonumber inc A
    orchestrator -> job_status : JobStatusUpdate (running)
    job_status -> sdk : JobStatusUpdate (running)

    autonumber inc A
    orchestrator -> job_progress : JobProgressUpdate (10%)
    job_progress -> sdk : JobProgressUpdate (10%)
end

<style>
note {
  MaximumWidth 200
}
</style>
note right
    <size:18>Remarks</size>
    - The order of status, cancel & progress updates is undefined.
    - Cancelling a job does not prevent a JobResult to be send as the job may already be finished.

    <size:18>Queue name variables</size>
    - ""TYPE"": Name of job/workflow.

    - ""ID"":   UUID of job as generated by SDK.

end note

group Cancel the job when possible
    autonumber inc A
    sdk -> job_cancel : JobCancel
    job_cancel -> orchestrator : JobCancel

    autonumber inc A
    orchestrator -> job_status : JobStatusUpdate (cancelled)
    job_status -> sdk : JobStatusUpdate (cancelled)
end

@enduml